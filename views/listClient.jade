extends administrationPanel

block title
    title EasySO - SSO - List Client
        //if (gte IE 6)&(lte IE 8) noscript link(rel='stylesheet', href='css/fallback.css')
block style
    link(rel='stylesheet', href='https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css')
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.css')
    link(rel='stylesheet', href='/css/bootstrap.min.css')
    link(rel='stylesheet', href='/css/mdb.min.css')
    link(rel='stylesheet', href='/style/style.css')

block content
    #modificaClientModal.modal.fade
        .modal-dialog.modal-lg
            .modal-content
                // dialog body
                .modal-header.text-center
                    h2.modal-title Modifica Client
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') ×
                .modal-body
                    .row
                        .col
                            .form.mb-5
                                i.fa.fa-id-card.prefix.grey-text.mr-2
                                label(for='clientID') Client ID
                                input#clientID.form-control.validate(type='text')
                        .col
                            .form.mb-5
                                i.fa.fa-user-secret.prefix.grey-text.mr-2
                                label(for='clientSecret') Client Secret
                                input#clientSecret.form-control.validate(type='text')
                        .col
                            .form.mb-5
                                i.fa.fa-windows.prefix.grey-text.mr-2
                                label(for='redirectUri') Redirect URI
                                input#redirectUri.form-control.validate(type='text')
                    .row
                        .col
                            .form.mb-5
                                select#grantTypes.mdb-select.colorful-select.dropdown-primary(multiple='', name='grantTypes')
                                    option(value='', disabled='', selected='') Seleziona
                                    option(value='password') password
                                    option(value='authorization_code') authorization code
                                    option(value='refresh_token') refresh token
                                    option(value='client_credentials') client credentials
                                label Modalità Accesso

                // dialog buttons
                .modal-footer
                    button.btn.btn-primary.btn-block(type='button', onclick='updateClient();') Salva
    #aggiungiClientModal.modal.fade
        .modal-dialog.modal-lg
            .modal-content
                // dialog body
                .modal-header.text-center
                    h2.modal-title Aggiungi Client
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') ×
                .modal-body
                    .row
                        .col
                            .form.mb-5
                                i.fa.fa-id-card.prefix.grey-text.mr-2
                                label(for='aggiungiClientID') Client ID
                                input#aggiungiClientID.form-control.validate(type='text')
                        .col
                            .form.mb-5
                                i.fa.fa-user-secret.prefix.grey-text.mr-2
                                label(for='aggiungiClientSecret') Client Secret
                                input#aggiungiClientSecret.form-control.validate(type='text')
                        .col
                            .form.mb-5
                                i.fa.fa-windows.prefix.grey-text.mr-2
                                label(for='aggiungiRedirectUri') Redirect URI
                                input#aggiungiRedirectUri.form-control.validate(type='text')
                    .row
                        .col
                            .form.mb-5
                                select#aggiungiGrantTypes.mdb-select.colorful-select.dropdown-primary(multiple='', name='grantTypes')
                                    option(value='', disabled='', selected='') Seleziona
                                    option(value='password') password
                                    option(value='authorization_code') authorization code
                                    option(value='refresh_token') refresh token
                                    option(value='client_credentials') client credentials
                                label Modalità Accesso

                // dialog buttons
                .modal-footer
                    button.btn.btn-primary.btn-block(type='button', onclick='addNewClient();') Salva

    .row.m-3
        .col
            blockquote.blockquote.bq-primary
                p.h4.bq-title Elenco Client
                p
                    | Elenco dei client presenti nel sistema.
    .row.m-3
        .col
            button#aggiungiClient.btn.btn-primary.btn-lg(onclick='openModalAggiungi();') Aggiungi Client
        .col
            button#modificaClient.btn.btn-primary.btn-lg(onclick='openModalModifica();' disabled='true') Modifica Client
        .col
            button#eliminaClient.btn.btn-primary.btn-lg(onclick='eliminaClient();' disabled='true') Elimina Client
    .row.m-3
        .col.table-responsive
            table#example.display.nowrap(cellspacing='0', width='100%')
                thead
                    tr
                        th
                        th Client ID
                        th Client Secret
                        th Redirect URI
                        th Modalita Accesso
                tfoot
                    tr
                        th
                        th Client ID
                        th Client Secret
                        th Redirect URI
                        th Modalita Accesso

block javascript
    // SCRIPTS
    // JQuery
    script(type='text/javascript', src='/js/jquery-3.2.1.min.js')
    // Datatables
    script(type='text/javascript', src='/js/dataTables.min.js')
    // Tooltips
    script(type='text/javascript', src='/js/popper.min.js')
    // Bootstrap core JavaScript
    script(type='text/javascript', src='/js/bootstrap.min.js')
    // Formatting function DataTablesMin
    script(type='text/javascript', src='/js/dataTableResMin.js')
    // MDB core JavaScript
    script(type='text/javascript', src='/js/mdb.min.js')
    // SideNav Initialization
    script.
        $(".button-collapse").sideNav();
    // Load Users Table
    script.
        $(document).ready(function () {
            $('.mdb-select').material_select();
        });
    script.

        var arrayClient = {};

        datiClient = {
            "_id": undefined,
            "id": undefined,
            "client_id": undefined,
            "client_secret": undefined,
            "redirect_uri": undefined,
            "grant_types": []
        }

        $(document).ready(function () {
            table = $('#example').DataTable({
                ajax: "/getClient",
                ajaxSettings: {
                    method: "GET",
                    cache: false
                },
                columns: [
                    {
                        "data": null,
                        "defaultContent": ''
                    },

                    {"data": "client_id"},
                    {"data": "client_secret"},
                    {"data": "redirect_uri"},
                    {"data": "grant_types"}
                ],
                responsive: {
                    details: {
                        type: 'column',
                        target: 'tr'
                    }
                },
                columnDefs: [{
                    className: 'control',
                    orderable: false,
                    targets: 0
                }],
                order: [1, 'asc']
            });

            $('#example tbody').on('click', 'tr', function () {
                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                    $('#modificaClient').prop('disabled', true);
                    $('#eliminaClient').prop('disabled', true);
                }
                else {
                    table.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                    $('#modificaClient').prop('disabled', false);
                    $('#eliminaClient').prop('disabled', false);
                }
            });

            $('#example tbody').on('click', 'td.details-control', function () {
                let tr = $(this).closest('tr');
                let row = table.row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    row.child(format(row.data())).show();
                    tr.addClass('shown');
                }
            });

        });

    script.
        function openModalModifica() {

            let ids1 = $.map(table.rows('.selected').data(), function (item) {
                return item;
            });

            arrayClient = ids1;
            arrayClient.action = 'aggiorna'

            $("#modificaClientModal").on("show", function () {
                $("#modificaClientModal a.btn").on("click", function (e) {
                    console.log("button pressed");
                    $("#modificaClientModal").modal('hide');
                });
            });
            $("#modificaClientModal").on("hide", function () {
                $("#modificaClientModal a.btn").off("click");
            });

            $("#modificaClientModal").on("hidden", function () {
                $("#modificaClientModal").remove();
            });

            $("#modificaClientModal").modal({
                "backdrop": "static",
                "keyboard": true,
                "show": true
            });

            $('#clientID').val(arrayClient[0].client_id);
            $('#clientSecret').val(arrayClient[0].client_secret);
            $('#redirectUri').val(arrayClient[0].redirect_uri);
            $('#grantTypes').val(arrayClient[0].grant_types);
        }

        function eliminaClient() {
            let ids1 = $.map(table.rows('.selected').data(), function (item) {
                return item;
            });

            arrayClient = ids1;
            ids1[0].action = "elimina";

            $.ajax({
                url: '/listClient',
                type: 'POST',
                data: JSON.stringify(ids1[0]),
                cache: false,
                contentType: 'application/json',
                success: function (data) {

                    if (data.errore === false) {
                        table.ajax.reload();
                        $('#modificaClient').prop('disabled', true);
                        $('#eliminaClient').prop('disabled', true);
                    }
                },
                faliure: function (data) {
                }
            });
        }

        function updateClient() {

            datiClient._id = arrayClient[0]._id;
            datiClient.id = arrayClient[0].id;
            datiClient.client_id = $('#clientID').val();
            datiClient.client_secret = $('#clientSecret').val();
            datiClient.redirect_uri = $('#redirectUri').val();
            datiClient.grant_types = $('#grantTypes').val();
            datiClient.action = 'aggiorna';

            $.ajax({
                url: '/listClient',
                type: 'POST',
                data: JSON.stringify(datiClient),
                cache: false,
                contentType: 'application/json',
                success: function (data) {

                    if (data.errore === false) {
                        console.log(data.errore);
                        $("#modificaClientModal").modal('hide');
                        $('#modificaClient').prop('disabled', true);
                        $('#eliminaClient').prop('disabled', true);
                        table.ajax.reload();
                    }
                },
                faliure: function (data) {
                }
            });

        }

        function openModalAggiungi() {
            $("#aggiungiClientModal").on("show", function () {
                $("#aggiungiClientModal a.btn").on("click", function (e) {
                    console.log("button pressed");
                    $("#aggiungiClientModal").modal('hide');
                });
            });
            $("#aggiungiClientModal").on("hide", function () {
                $("#aggiungiClientModal a.btn").off("click");
            });

            $("#aggiungiClientModal").on("hidden", function () {
                $("#aggiungiClientModal").remove();
            });

            $("#aggiungiClientModal").modal({
                "backdrop": "static",
                "keyboard": true,
                "show": true
            });
        }
        function addNewClient() {
            datiClient.client_id = $('#aggiungiClientID').val();
            datiClient.client_secret = $('#aggiungiClientSecret').val();
            datiClient.redirect_uri = $('#aggiungiRedirectUri').val();
            datiClient.grant_types = $('#aggiungiGrantTypes').val();
            datiClient.action = 'aggiungi';
            $.ajax({
                url: '/listClient',
                type: 'POST',
                data: JSON.stringify(datiClient),
                cache: false,
                contentType: 'application/json',
                success: function (data) {
                    $("#aggiungiClientModal").modal('hide');
                    table.ajax.reload();
                    $('#modificaClient').prop('disabled', true);
                    $('#eliminaClient').prop('disabled', true);
                }
            });
        }


